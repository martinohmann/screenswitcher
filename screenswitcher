#!/bin/bash
#
# Display switcher utility for laptops
#
# author: Martin Ohmann <martin@mohmann.de>
#

## user config

# display identifiers
internal="LVDS1"
output0="HDMI1"
output1="VGA1"

# clone default
clone="false" 

# default clone resolution
default_mode="1024x768"

# activate only one display at a time by default
single="false"

# default extend orientation of output0
o_output0="left-of" 

# default extend orientation of output1
o_output1="left-of" 

# verbose output by default
verbose="false"


## screenswitcher begin
xrandr_q=$(xrandr -q)

usage() {
	echo "Display switcher utility for laptops"
	echo
	echo "Invoke multiple times to cycle through display modes (default mode)"
	echo "(internal displayy -> external display -> both -> internal display etc.)"
	echo
	echo "Usage: $(basename "$0") [-h] [-d] [-c] [-m <mode>] [-e [<orientation>]]"
	echo "                        [-s] [-o <output>] [-q]"
	echo 
	echo "    -h                  Display this dialog and exit"
	echo
	echo "    -v                  Verbose output"
	echo
	echo "    -c                  Clone display instead of extending it."
	echo
	echo "    -m <mode>           Set clone resolution. Use pattern '[0-9]{3,}x[0-9]{3,}', "
	echo "                        e.g. 800x600 (default: $default_mode)"
	echo
	echo "    -e [<orientation>]  Extend display (default). Optional orientation param"
	echo "                        might be one of 'above|below|left-of|right-of'"
	echo
	echo "    -s                  Single display: don't (cycle) extend or clone,"
	echo "                        just switch between internal/external screen"
	echo
	echo "    -o <output>         External output to use. One of 'output0|output1'."
	echo "                        Will fallback to internal if output not connected."
	echo "                        If not set, will try output0 -> output1 -> internal"
	echo
	echo "    -q                  Quiet. Don't print active outputs after successful switch"
}

msg() {
	[[ "$verbose" == "true" ]] && echo "[$(basename "$0")] $1"
}

bail() {
	msg "xrandr failed to set display mode"
	exit 1
}

connected() {
	if [[ -n "$(echo "$xrandr_q" | grep "$1 connected")" ]]; then
		echo "true" 
	else 
		echo "false"
	fi
}

enabled() {
	if [[ -z "$(echo "$xrandr_q" | grep "$1 connected (")" ]] && 
		[[ -z "$(echo "$xrandr_q" | grep "$1 disconnected (")" ]]; then
		echo "true"
	else
		echo "false"
	fi
}

extend() {
	xrandr --output "$1" --auto "--$4" "$2" --output "$3" --off > /dev/null 2>&1 || bail
	[[ -z "$quiet" ]] && echo "extend: $1 $4 $2"
}

clone() {
	xrandr --output "$1" --mode "$4" --output "$2" --mode "$4" --output "$3" --off > /dev/null 2>&1 || bail
	[[ -z "$quiet" ]] && echo "clone: $1 $2 @ $4"
}

single() {
	xrandr --output "$1" --auto --output "$2" --off --output "$3" --off > /dev/null 2>&1	|| bail
	[[ -z "$quiet" ]] && echo "single: $1"
}

cycle() {
	local out0=$1
	local out1=$2

	msg "$out0 connected"

	if [[ $(enabled "$out0") == "true" ]]; then
		if [[ "$single" == "true" ]] || [[ $(enabled "$internal") == "true" ]]; then
			msg "$out0 enabled, switching to single display $internal"
			single "$internal" "$out0" "$out1"
		elif [[ "$clone" == "true" ]]; then
			msg "cloning $internal and $out0 @ ${mode:-$default_mode}"
			clone "$internal" "$out0" "$out1" "${mode:-$default_mode}"
		else
			msg "extending $internal $orientation $out0"
			extend "$internal" "$out0" "$out1" "$orientation"
		fi
	else
		msg "$internal enabled, switching to single display $out0"
		single "$out0" "$internal" "$out1"
	fi
}

# parse args
while [[ -n "$1" ]]; do
	case $1 in
		-h) 
			usage; exit 0;;
		-v)
			verbose="true"; shift;;
		-c)
			clone="true"; single="false"; shift;;
		-m)
			[[ ! "$2" =~ ^[0-9]{3,}x[0-9]{3,}$ ]] && { usage; exit 1; }
			mode=$2; shift; shift;;
		-e)
			clone="false"; single="false";
			case "$2" in
				above|below|left-of|right-of)
					orientation="$2"; shift;;
				*) ;;
			esac
			shift;;
		-s)
			clone="false"; single="true"; shift;;
		-o)
			no_auto="true"; shift
			case "$1" in
				output0) ;; # output0 already first in line, do nothing
				output1) # swap output configs to have output1 go first
					output=$output0;  o_output=$o_output0 # tmp
					output0=$output1; o_output0=$o_output1
					output1=$output;  o_output1=$o_output
					;;
				*)
				usage; exit 1;;
			esac
			shift;;
		-q)
			quiet="true"; shift;;
		*)
			usage; exit 1;;
	esac
done

# switch screen
if [[ $(connected "$output0") == "true" ]]; then
	orientation=${orientation:-$o_output0}
	cycle "$output0" "$output1"
elif [[ -z "$no_auto" ]] && [[ $(connected "$output1") == "true" ]]; then
	orientation=${orientation:-$o_output1}
	cycle "$output1" "$output0"
else
	msg "no external displays, single display $internal"
	single "$internal" "$output0" "$output1"
fi

exit 0
